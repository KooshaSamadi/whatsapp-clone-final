{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nexport default function recordAudio() {\n  return new Promise(resolve => {\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n      mediaRecorder.addEventListener(\"dataavailable\", event => {\n        audioChunks.push(event.data);\n      });\n\n      function start() {\n        mediaRecorder.start();\n      }\n\n      function stop() {\n        return new Promise(resolve => {\n          mediaRecorder.addEventListener(\"stop\", () => {\n            const audioName = uuid();\n            const audioFile = new File(audioChunks, audioName, {\n              type: \"audio/mpeg\"\n            });\n            const audioUrl = URL.createObjectURL(audioFile);\n            const audio = new Audio(audioUrl);\n\n            function play() {\n              audio.play();\n            }\n\n            resolve({\n              audioFile,\n              audioUrl,\n              play,\n              audioName\n            });\n          });\n          mediaRecorder.stop();\n        });\n      }\n\n      resolve({\n        start,\n        stop\n      });\n    });\n  });\n}","map":{"version":3,"sources":["C:/Users/Koosha/Desktop/Reed Barger - Build WhatsApp with React 2021-5/whatsapp-clone/src/components/recordAudio.js"],"names":["v4","uuid","recordAudio","Promise","resolve","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","audioChunks","addEventListener","event","push","data","start","stop","audioName","audioFile","File","type","audioUrl","URL","createObjectURL","Audio","play"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApC,EAAqDC,IAArD,CAA2DC,MAAD,IAAY;AACpE,YAAMC,aAAa,GAAG,IAAIC,aAAJ,CAAkBF,MAAlB,CAAtB;AACA,YAAMG,WAAW,GAAG,EAApB;AAEAF,MAAAA,aAAa,CAACG,gBAAd,CAA+B,eAA/B,EAAiDC,KAAD,IAAW;AACzDF,QAAAA,WAAW,CAACG,IAAZ,CAAiBD,KAAK,CAACE,IAAvB;AACD,OAFD;;AAIA,eAASC,KAAT,GAAiB;AACfP,QAAAA,aAAa,CAACO,KAAd;AACD;;AAED,eAASC,IAAT,GAAgB;AACd,eAAO,IAAIhB,OAAJ,CAAaC,OAAD,IAAa;AAC9BO,UAAAA,aAAa,CAACG,gBAAd,CAA+B,MAA/B,EAAuC,MAAM;AAC3C,kBAAMM,SAAS,GAAGnB,IAAI,EAAtB;AACA,kBAAMoB,SAAS,GAAG,IAAIC,IAAJ,CAAST,WAAT,EAAsBO,SAAtB,EAAiC;AACjDG,cAAAA,IAAI,EAAE;AAD2C,aAAjC,CAAlB;AAGA,kBAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,SAApB,CAAjB;AACA,kBAAMb,KAAK,GAAG,IAAImB,KAAJ,CAAUH,QAAV,CAAd;;AACA,qBAASI,IAAT,GAAgB;AACdpB,cAAAA,KAAK,CAACoB,IAAN;AACD;;AAEDxB,YAAAA,OAAO,CAAC;AAAEiB,cAAAA,SAAF;AAAaG,cAAAA,QAAb;AAAuBI,cAAAA,IAAvB;AAA6BR,cAAAA;AAA7B,aAAD,CAAP;AACD,WAZD;AAcAT,UAAAA,aAAa,CAACQ,IAAd;AACD,SAhBM,CAAP;AAiBD;;AAEDf,MAAAA,OAAO,CAAC;AAAEc,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAP;AACD,KAjCD;AAkCD,GAnCM,CAAP;AAoCD","sourcesContent":["import { v4 as uuid } from \"uuid\";\n\nexport default function recordAudio() {\n  return new Promise((resolve) => {\n    navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n      const mediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n\n      mediaRecorder.addEventListener(\"dataavailable\", (event) => {\n        audioChunks.push(event.data);\n      });\n\n      function start() {\n        mediaRecorder.start();\n      }\n\n      function stop() {\n        return new Promise((resolve) => {\n          mediaRecorder.addEventListener(\"stop\", () => {\n            const audioName = uuid();\n            const audioFile = new File(audioChunks, audioName, {\n              type: \"audio/mpeg\",\n            });\n            const audioUrl = URL.createObjectURL(audioFile);\n            const audio = new Audio(audioUrl);\n            function play() {\n              audio.play();\n            }\n\n            resolve({ audioFile, audioUrl, play, audioName });\n          });\n\n          mediaRecorder.stop();\n        });\n      }\n\n      resolve({ start, stop });\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}